{"ast":null,"code":"var _jsxFileName = \"/Users/brijalsavaliya/brijal/brijalsavaliya/techholding/taskCompletion/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport CheckBox from './components/Checkbox/Checkbox';\nimport { TransitionGroup } from 'react-transition-group';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckElement = event => {\n      console.log(\"called\");\n      let todos = this.state.todos;\n      console.log(event.target.value);\n      todos.forEach(todo => {\n        if (todo.value === event.target.value) todo.isChecked = event.target.checked;\n      });\n      this.setState({\n        todos: todos\n      });\n    };\n\n    this.state = {\n      todos: [{\n        id: 1,\n        value: \"Task1\",\n        isChecked: false\n      }, {\n        id: 2,\n        value: \"Task2\",\n        isChecked: true\n      }, {\n        id: 3,\n        value: \"Task3\",\n        isChecked: false\n      }, {\n        id: 4,\n        value: \"Task4\",\n        isChecked: false\n      }],\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return React.createElement(\"div\", {\n        class: \"divLoader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"Loader\",\n        \"data-src\": require('../src/screen.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \" Check/Uncheck Checkbox with Animation Demo \"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.state.todos.map(todo => {\n        if (!todo.isChecked) return React.createElement(TransitionGroup, {\n          className: \"items-section__list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(CheckBox, Object.assign({\n          key: todo.id,\n          handleCheckElement: this.handleCheckElement\n        }, todo, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        })));else return null;\n      })));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/brijalsavaliya/brijal/brijalsavaliya/techholding/taskCompletion/src/App.js"],"names":["React","Component","CheckBox","TransitionGroup","App","constructor","props","handleCheckElement","event","console","log","todos","state","target","value","forEach","todo","isChecked","checked","setState","id","isLoading","componentDidMount","render","require","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAQC,QAAR,MAAuB,gCAAvB;AACA,SAASC,eAAT,QAAgC,wBAAhC;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiBnBC,kBAjBmB,GAiBGC,KAAD,IAAW;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAvB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACK,MAAN,CAAaC,KAAzB;AACAH,MAAAA,KAAK,CAACI,OAAN,CAAcC,IAAI,IAAI;AACpB,YAAIA,IAAI,CAACF,KAAL,KAAeN,KAAK,CAACK,MAAN,CAAaC,KAAhC,EACEE,IAAI,CAACC,SAAL,GAAkBT,KAAK,CAACK,MAAN,CAAaK,OAA/B;AACH,OAHD;AAKA,WAAKC,QAAL,CAAc;AAACR,QAAAA,KAAK,EAAEA;AAAR,OAAd;AACD,KA3BkB;;AAEjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE,CACL;AAACS,QAAAA,EAAE,EAAE,CAAL;AAAQN,QAAAA,KAAK,EAAE,OAAf;AAAwBG,QAAAA,SAAS,EAAE;AAAnC,OADK,EAEL;AAACG,QAAAA,EAAE,EAAE,CAAL;AAAQN,QAAAA,KAAK,EAAE,OAAf;AAAwBG,QAAAA,SAAS,EAAE;AAAnC,OAFK,EAGL;AAACG,QAAAA,EAAE,EAAE,CAAL;AAAQN,QAAAA,KAAK,EAAE,OAAf;AAAwBG,QAAAA,SAAS,EAAE;AAAnC,OAHK,EAIL;AAACG,QAAAA,EAAE,EAAE,CAAL;AAAQN,QAAAA,KAAK,EAAE,OAAf;AAAwBG,QAAAA,SAAS,EAAE;AAAnC,OAJK,CADI;AAOXI,MAAAA,SAAS,EAAC;AAPC,KAAb;AASD;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,QAAL,CAAc;AAACE,MAAAA,SAAS,EAAE;AAAZ,KAAd;AACH;;AAcDE,EAAAA,MAAM,GAAG;AACP,QAAG,KAAKX,KAAL,CAAWS,SAAd,EAAyB;AACvB,aACE;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAC,QAAT;AAAkB,oBAAWG,OAAO,CAAC,mBAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KAND,MAOK;AACH,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,KAAKZ,KAAL,CAAWD,KAAX,CAAiBc,GAAjB,CAAsBT,IAAD,IAAU;AAC7B,YAAG,CAACA,IAAI,CAACC,SAAT,EACE,OACE,oBAAC,eAAD;AAAiB,UAAA,SAAS,EAAC,qBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAED,IAAI,CAACI,EAApB;AAAwB,UAAA,kBAAkB,EAAE,KAAKb;AAAjD,WAAyES,IAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADF,CADF,KAOE,OAAO,IAAP;AACH,OATD,CAFF,CAFF,CADF;AAmBD;AACF;;AA3DyB;;AA8D5B,eAAeZ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport  CheckBox  from './components/Checkbox/Checkbox';\nimport { TransitionGroup } from 'react-transition-group';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      todos: [\n        {id: 1, value: \"Task1\", isChecked: false},\n        {id: 2, value: \"Task2\", isChecked: true},\n        {id: 3, value: \"Task3\", isChecked: false},\n        {id: 4, value: \"Task4\", isChecked: false}\n      ],\n      isLoading:true\n    }\n  }\n\n  componentDidMount() {\n      this.setState({isLoading: false})\n  }\n\n  handleCheckElement = (event) => {\n    console.log(\"called\");\n    let todos = this.state.todos;\n    console.log(event.target.value)\n    todos.forEach(todo => {\n      if (todo.value === event.target.value)\n        todo.isChecked =  event.target.checked\n    })\n\n    this.setState({todos: todos})\n  }\n\n  render() {\n    if(this.state.isLoading) {\n      return (\n        <div class=\"divLoader\">\n          <img alt=\"Loader\" data-src={ require('../src/screen.png') } />\n        </div>\n      );\n    }\n    else {\n      return (\n        <div className=\"App\">\n          <h1> Check/Uncheck Checkbox with Animation Demo </h1>\n          <ul>\n          {\n            this.state.todos.map((todo) => {\n              if(!todo.isChecked)\n                return (\n                  <TransitionGroup className=\"items-section__list\">\n                    <CheckBox key={todo.id} handleCheckElement={this.handleCheckElement} {...todo} />\n                  </TransitionGroup>\n                );\n              else\n                return null;\n            })\n          }\n          </ul>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}